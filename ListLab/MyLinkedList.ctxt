#BlueJ class context
comment0.target=MyLinkedList
comment0.text=\n\ This\ class\ is\ my\ linked\ list\ created\ from\ DoubleNode\n\ @author\ Jonny\ Tang\ and\ creators\ of\ the\ lab\n\ @version\ 9/26/2025\n\ @param\ <E>\ the\ type\ that\ the\ linked\ list\ will\ consist\ of\n
comment1.params=
comment1.target=MyLinkedList()
comment1.text=\n\ Creates\ a\ linked\ list\ initialized\ with\ first\ and\ last\ as\ null\ and\ size\ as\ 0\n
comment10.params=index\ obj
comment10.target=void\ add(int,\ java.lang.Object)
comment10.text=\ \n\ Adds\ obj\ at\ index\ index\n\ @param\ index\ the\ index\ where\ the\ object\ is\ getting\ added\n\ @param\ obj\ the\ value\ of\ the\ node\ getting\ added\n\ @precondition\ \ 0\ <\=\ index\ <\=\ size\n\ @postcondition\ inserts\ obj\ at\ position\ index,\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ moving\ elements\ at\ position\ index\ and\ higher\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ to\ the\ right\ (adds\ 1\ to\ their\ indices)\ and\ adjusts\ size\n
comment11.params=index
comment11.target=java.lang.Object\ remove(int)
comment11.text=\ \n\ Removes\ element\ at\ index\n\ @param\ index\ the\ index\ of\ the\ element\ getting\ removed\n\ @postcondition\ removes\ element\ from\ position\ index,\ moving\ elements\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ at\ position\ index\ +\ 1\ and\ higher\ to\ the\ left\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ (subtracts\ 1\ from\ their\ indices)\ and\ adjusts\ size\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ returns\ the\ element\ formerly\ at\ the\ specified\ position\n\ @return\ the\ value\ of\ the\ element\ that\ was\ removed\n
comment12.params=obj
comment12.target=void\ addFirst(java.lang.Object)
comment12.text=\n\ Adds\ to\ the\ beginning\ of\ the\ linked\ list.\n\ @param\ obj\ the\ value\ of\ the\ object\ getting\ added\ to\ the\ beginning\n
comment13.params=obj
comment13.target=void\ addLast(java.lang.Object)
comment13.text=\n\ Adds\ to\ the\ end\ of\ the\ linked\ list\n\ @param\ obj\ the\ value\ of\ the\ object\ getting\ added\ to\ the\ end\n
comment14.params=
comment14.target=java.lang.Object\ getFirst()
comment14.text=\n\ gets\ the\ value\ of\ the\ head\n\ @return\ the\ value\ of\ the\ head\n
comment15.params=
comment15.target=java.lang.Object\ getLast()
comment15.text=\n\ Gets\ the\ value\ of\ the\ tail\n\ @return\ the\ value\ of\ the\ tail\n
comment16.params=
comment16.target=java.lang.Object\ removeFirst()
comment16.text=\n\ Removes\ the\ first\ element\ of\ the\ linked\ list\n\ @return\ the\ value\ of\ the\ first\ element\ of\ the\ linked\ list\n
comment17.params=
comment17.target=java.lang.Object\ removeLast()
comment17.text=\n\ Removes\ the\ last\ element\ of\ the\ linked\ list\n\ @return\ the\ value\ of\ the\ element\ getting\ removed\n
comment18.params=
comment18.target=java.util.Iterator\ iterator()
comment18.text=\n\ Creates\ an\ iterator\n\ @return\ the\ iterator\ geting\ created\n
comment2.params=
comment2.target=java.lang.String\ toString()
comment2.text=\n\ Returns\ the\ linked\ list\ to\ string\n\ @return\ the\ linked\ list\ as\ a\ string\ with\ format\ [a1,\ a2...an]\n
comment3.params=index
comment3.target=DoubleNode\ getNodeFromFirst(int)
comment3.text=\ \n\ Gets\ the\ given\ node\ traversing\ forward\n\ @precondition\ \ 0\ <\=\ index\ <\=\ size\ /\ 2\n\ @param\ index\ the\ index\ of\ the\ node\ you're\ getting\n\ @postcondition\ starting\ from\ first,\ returns\ the\ node\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ with\ given\ index\ (where\ index\ 0\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ returns\ first)\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \n\ @return\ the\ reference\ to\ the\ node\ you're\ finding\n
comment4.params=index
comment4.target=DoubleNode\ getNodeFromLast(int)
comment4.text=\ \n\ Gets\ the\ given\ node\ traversing\ backward\n\ @precondition\ \ size\ /\ 2\ <\=\ index\ <\ size\n\ @param\ index\ the\ index\ of\ the\ node\ you're\ finding\n\ @postcondition\ starting\ from\ last,\ returns\ the\ node\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ with\ given\ index\ (where\ index\ size-1\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ returns\ last)\n\ @return\ the\ reference\ to\ the\ node\ you're\ finding\n
comment5.params=index
comment5.target=DoubleNode\ getNode(int)
comment5.text=\ \n\ Gets\ the\ node\ using\ getNodeFromFirst\ or\ getNodeFromLast.\n\ @precondition\ \ 0\ <\=\ index\ <\ size\n\ @param\ index\ the\ index\ of\ the\ node\ you're\ getting\n\ @postcondition\ starting\ from\ first\ or\ last\ (whichever\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ is\ closer),\ returns\ the\ node\ with\ given\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ index\n\ @return\ the\ reference\ to\ the\ node\ at\ given\ index\n
comment6.params=
comment6.target=int\ size()
comment6.text=\n\ Getter\ for\ size\n\ @return\ the\ size\n
comment7.params=index
comment7.target=java.lang.Object\ get(int)
comment7.text=\n\ Gets\ the\ value\ of\ the\ node\ at\ given\ index\n\ @param\ index\ \ the\ index\ of\ the\ node\ you're\ getting\n\ @return\ the\ value\ of\ node\ at\ index\ index\n
comment8.params=index\ obj
comment8.target=java.lang.Object\ set(int,\ java.lang.Object)
comment8.text=\ \n\ Sets\ node\ at\ index\ to\ object\n\ @param\ index\ the\ index\ of\ the\ node\ getting\ set\n\ @param\ obj\ the\ value\ that\ it's\ getting\ set\ to\n\ @postcondition\ replaces\ the\ element\ at\ position\ index\ with\ obj\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ returns\ the\ element\ formerly\ at\ the\ specified\ position\n\ @return\ the\ element\ formerly\ at\ index\n
comment9.params=obj
comment9.target=boolean\ add(java.lang.Object)
comment9.text=\n\ Adds\ to\ the\ end\n\ @param\ obj\ the\ value\ getting\ appended\ to\ the\ end\n\ @postcondition\ appends\ obj\ to\ end\ of\ list;\ returns\ true\n\ @return\ true\n
numComments=19
