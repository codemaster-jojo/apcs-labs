#BlueJ class context
comment0.target=SolitaireDisplay
comment0.text=\n\ Solitaire\ display.\ Mostly\ written\ by\ creators\ of\ the\ lab,\ but\ \n\ some\ extra\ credit\ I\ had\ to\ implement\ here.\n\ \n\ @author\ creators\ of\ this\ lab,\ Jonny\ Tang\n\ @version\ 10/23/2025\n
comment1.params=game
comment1.target=SolitaireDisplay(Solitaire)
comment1.text=\n\ Constructor\ for\ solitaire\ display.\n\ \n\ @param\ game\ the\ solitaire\ game\ reference\n
comment10.params=
comment10.target=void\ unselect()
comment10.text=\n\ Unselect\ the\ cards.\n
comment11.params=
comment11.target=boolean\ isWasteSelected()
comment11.text=\n\ Checks\ if\ waste\ is\ selected\n\ @return\ whether\ the\ waste\ is\ selected.\n
comment12.params=
comment12.target=void\ selectWaste()
comment12.text=\n\ Selects\ the\ waste\n
comment13.params=
comment13.target=boolean\ isPileSelected()
comment13.text=\n\ Selects\ piles\n\ \n\ @return\ whether\ a\ pile\ is\ selected\n
comment14.params=
comment14.target=int\ selectedPile()
comment14.text=\n\ Checks\ which\ pile\ is\ selected\n\ \n\ @return\ the\ pile\ that's\ selected\n
comment15.params=index
comment15.target=void\ selectPile(int)
comment15.text=\n\ Selects\ a\ pile\ at\ given\ index\n\ \n\ @param\ index\ the\ index\ of\ the\ pile\n
comment16.params=e
comment16.target=void\ keyPressed(java.awt.event.KeyEvent)
comment16.text=\n\ Checks\ key\ presses.\ R\ ->\ restarts\ game,\ U\ ->\ undoes\ last\ move\n\ \n\ @param\ e\ the\ key\ that's\ pressed\n
comment17.params=e
comment17.target=void\ keyReleased(java.awt.event.KeyEvent)
comment17.text=\n\ Does\ nothing.\n\ @param\ e\ the\ key\ event\n
comment18.params=e
comment18.target=void\ keyTyped(java.awt.event.KeyEvent)
comment18.text=\n\ Does\ nothing.\n\ \n\ @param\ e\ the\ key\ event\n
comment2.params=g
comment2.target=void\ paintComponent(java.awt.Graphics)
comment2.text=\n\ Paints\ the\ card\ stacks\ on\ the\ screen.\ \n\ \n\ @param\ g\ the\ graphics\n
comment3.params=g\ card\ x\ y
comment3.target=void\ drawCard(java.awt.Graphics,\ Card,\ int,\ int)
comment3.text=\n\ Method\ to\ draw\ one\ card\ at\ given\ position\n\ \n\ @param\ g\ the\ graphics\n\ @param\ card\ the\ card\ that's\ getting\ painted\n\ @param\ x\ the\ x\ pos\ of\ the\ card\n\ @param\ y\ the\ y\ pos\ of\ the\ card\n
comment4.params=e
comment4.target=void\ mouseExited(java.awt.event.MouseEvent)
comment4.text=\n\ Does\ nothing.\ This\ is\ to\ avoid\ abstract\ method\ not\ defined\ error.\n\ \n\ @param\ e\ the\ mouse\ event\n
comment5.params=e
comment5.target=void\ mouseEntered(java.awt.event.MouseEvent)
comment5.text=\n\ Does\ nothing.\ This\ is\ to\ avoid\ abstract\ method\ not\ defined\ error.\n\ \n\ @param\ e\ the\ mouse\ event\n
comment6.params=e
comment6.target=void\ mouseReleased(java.awt.event.MouseEvent)
comment6.text=\n\ Does\ nothing.\ This\ is\ to\ avoid\ abstract\ method\ not\ defined\ error.\n\ \n\ @param\ e\ the\ mouse\ event\n
comment7.params=e
comment7.target=void\ mousePressed(java.awt.event.MouseEvent)
comment7.text=\n\ Does\ nothing.\ This\ is\ to\ avoid\ abstract\ method\ not\ defined\ error.\n\ \n\ @param\ e\ the\ mouse\ event\n
comment8.params=e
comment8.target=void\ mouseClicked(java.awt.event.MouseEvent)
comment8.text=\n\ Checks\ if\ mouse\ clicked\ on\ any\ card\ stacks.\ If\ so,\ trigger\ actions\n\ \n\ @param\ e\ the\ mouse\ event\n
comment9.params=g\ x\ y
comment9.target=void\ drawBorder(java.awt.Graphics,\ int,\ int)
comment9.text=\n\ Draws\ border\ around\ selected\ items\n\ \n\ @param\ g\ the\ graphics\ reference\n\ @param\ x\ the\ x\ pos\ of\ the\ border\n\ @param\ y\ the\ y\ value\ of\ the\ cursor\n
numComments=19
